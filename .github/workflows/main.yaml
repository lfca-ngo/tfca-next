name: ci
on:
  push:
    branches:
      - '**'     
  repository_dispatch:
    types: [publish-event]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Run linter
        run: yarn lint

  deploy:
    runs-on: ubuntu-latest
    needs: lint
    outputs:
      preview_url: ${{ steps.vercel-deploy.outputs.preview-url }}
    steps:
      - uses: actions/checkout@v2
      - name: Determine vercel args
        uses: haya14busa/action-cond@v1
        id: vercel-args
        with:
          cond: ${{ github.ref_name == 'main' }}
          if_true: '--prod'
          if_false: ''
      - name: Deploy to Vercel Action
        uses: amondnet/vercel-action@v20 #deploy
        id: vercel-deploy
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          scope: ${{ secrets.VERCEL_ORG_ID }}
          vercel-args: ${{ steps.vercel-args.outputs.value }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          vercel-token: ${{ secrets.VERCEL_TOKEN }}

  e2e-test:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref_name != 'main'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Install Playwright
        run: npx playwright install-deps chromium
      - name: Run e2e tests
        run: yarn test:e2e
        env:
          PLAYWRIGHT_TEST_BASE_URL: ${{ needs.deploy.outputs.preview_url }}
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: playwright-results
          path: test-results